---
title: "Bellabeat Marketing Analysis Case Study"
author: "U. Saint Koyo"
date: "`r format(Sys.time(), '%d %B %Y')`"
output: 
  html_document:
    toc: true
    fig_width: 7
    fig_height: 4.5
    theme: bootstrap
    highlight: tango
---

# Introduction

I was going to tell a time-travelling joke to start off this introduction, but you didn't like it. Get it? Please tell me you did... Cause the joke was told already in the future... And you didn't laugh hence you didn't like it... Ugh! Nevermind let's just get into it - welcome to my very first shot in solving a data analytics case study, this is kinda a career defining moment so please any comments or recommendations will be much appreciated. In this notebook, you'll find that I am working as a junior data analyst for Bellabeat, a high-tech manufacturer of health-focused products for women, to view the full details of this case study [<span style="font-style: italic">click here</span>](https://github.com/Saiinty/Bellabeat-Case-Study/blob/52ba4f0b38f86009b83f74333b83fde9618d20b7/Bellabeat-Case-Study/Bellabeat%20Case%20Study%20Scenario.pdf) <img src=https://media.giphy.com/media/W01yhJis2g25hd2yA8/giphy.gif width=30 style="margin: auto; transform: rotate(180deg);">

## What's the business task?

By 2030, it is anticipated that the global market for smart devices, which was estimated to be worth &#36;49.04 billion in 2022, will have grown to &#36;150 billion. The market is projected to grow with a Compound Annual Growth Rate (CAGR) of 15% per annum. With Bellabeat being a successful small company at manufacturing health-focused products for women, they have the potential to become a large player in the global smart devices market.

Analyzing usage data of non-Bellabeat smart devices will provide insights to unlock new growth opportunities for the company. This project aims to:

<ul style="list-style-type: square; margin: 15px">
<li style="padding-left: 0px">understand the trends in smart device usage</li>
<li style="padding-left: 0px">understand the value that these trends have towards Bellabeat customers</li>
<li style="padding-left: 0px">how these trends can help influence the Bellabeat marketing strategy</li>

## Who are the stakeholders?

The key stakeholders in the Bellabeat company include:

<ul style="list-style-type: square; margin: 15px">
<li style="padding-left: 0px">Urška Sršen: Bellabeat's co-founder and Chief Creative Officer</li>
<li style="padding-left: 0px">Sando Mur: Mathematician and Bellabeat's co-founder</li>
<li style="padding-left: 0px">Bellabeat marketing analytics team: A team of data analysts responsible for collecting, analyzing, and reporting data.</li>
</ul>

## Set up environment

Let's start off by loading up our packages

```{r install_kable, include=FALSE}
install.packages("kableExtra")
```

```{r packages, warning=FALSE}
# Load packages
library('tidyverse')
library('here')         # referencing
library('skimr')        # summarization
library('janitor')      # cleaning
library('shiny')        # embedding
library('kableExtra')   # formatting
```

#  Description of all data sources

The stakeholders encouraged me to use public data that explores smart device users' daily habits which they point out to a specific data set: [<span style="font-style: italic">FitBit Fitness Tracker Data</span>](https://www.kaggle.com/datasets/arashnic/fitbit)

## About dataset

The 'FitBit Fitness Tracker Data' dataset is made available through Mobius in Kaggle under the license, <span style="font-weight: bold">CC0: Public Domain</span>. It is generated by respondents to a distributed survey via Amazon Mechanical Turk between March 12<span style="font-size: 8pt;">^th^</span> and May 12<span style="font-size: 8pt;">^th^</span>, in the year 2016, with thirty eligible FitBit users consented to the submission of their personal tracker data including minute-level output for physical activity, heart rate, and sleep monitoring.

The data sets are stored in 2 separate zip files, one has data from 12<span style="font-size: 8pt;">^th^</span> March to 11<span style="font-size: 8pt;">^th^</span> April, and the other has data from 12<span style="font-size: 8pt;">^th^</span> April to 12<span style="font-size: 8pt;">^th^</span> May. And within them, there are 29 CSV files in total, and each data entry that we will be using is stored in a long format with the same ID having values in multiple rows. Now that our packages are loaded, let's read in the data from March-to-April (MTA) and from April-to-May (ATM), and then combine each of them:

```{r import_df, message=FALSE}
# Daily activities
MTA_dailyActivity <- read.csv("/kaggle/input/fitbit/mturkfitbit_export_3.12.16-4.11.16/Fitabase Data 3.12.16-4.11.16/dailyActivity_merged.csv")
ATM_dailyActivity <- read.csv("/kaggle/input/fitbit/mturkfitbit_export_4.12.16-5.12.16/Fitabase Data 4.12.16-5.12.16/dailyActivity_merged.csv")

# Weight log
MTA_weightLogInfo <- read.csv("/kaggle/input/fitbit/mturkfitbit_export_3.12.16-4.11.16/Fitabase Data 3.12.16-4.11.16/weightLogInfo_merged.csv")
ATM_weightLogInfo <- read.csv("/kaggle/input/fitbit/mturkfitbit_export_4.12.16-5.12.16/Fitabase Data 4.12.16-5.12.16/weightLogInfo_merged.csv")

# Hourly calories
MTA_hourlyCalories <- read.csv("/kaggle/input/fitbit/mturkfitbit_export_3.12.16-4.11.16/Fitabase Data 3.12.16-4.11.16/hourlyCalories_merged.csv")
ATM_hourlyCalories <- read.csv("/kaggle/input/fitbit/mturkfitbit_export_4.12.16-5.12.16/Fitabase Data 4.12.16-5.12.16/hourlyCalories_merged.csv")

# Hourly steps
MTA_hourlySteps <- read.csv("/kaggle/input/fitbit/mturkfitbit_export_3.12.16-4.11.16/Fitabase Data 3.12.16-4.11.16/hourlySteps_merged.csv")
ATM_hourlySteps <- read.csv("/kaggle/input/fitbit/mturkfitbit_export_4.12.16-5.12.16/Fitabase Data 4.12.16-5.12.16/hourlySteps_merged.csv")

# Combine daily activities, calories, steps and weight
activity <- merge(MTA_dailyActivity, ATM_dailyActivity, all = TRUE)
weight <- merge(MTA_weightLogInfo, ATM_weightLogInfo, all = TRUE)
calories <- merge(MTA_hourlyCalories, ATM_hourlyCalories, all = TRUE)
steps <- merge(MTA_hourlySteps, ATM_hourlySteps, all = TRUE)
```

## Data usability

Upon my investigation to the given datasets, there are a few issues that I've discovered which raise concerns to the credibility of the author. According to Zenodo, the original publisher, it is said 30 eligible FitBit users consented to the submission of their data but upon verification, it showed a total user count of 35 users. 

```{r check_unique, message=FALSE}
n_distinct(activity$Id)
n_distinct(weight$Id)
n_distinct(calories$Id)
n_distinct(steps$Id)
```

Furthermore, the sample isn't representative of the population as a whole meaning the data is bias. The lack of demographic information clearly suggests that the sample wasn't chosen at random because knowing the user's age, gender, and region will uphold the integrity of the data sample. Given that there are currently over a million devices synced according to the [<span style="font-style: italic">Bellabeat</span>](https://bellabeat.com/about-us/) website, <span style="font-weight: bold">I strongly recommend a larger sample size in order to have confident and reliable results from this analysis, an applicable sample size would be 385 users which will ensure a 95% confidence level and 5% MOE (margin of error)</span>.

However, I do have some level of trust that the information provided within this dataset is accurate, complete, and has been vetted and proven fit for use. I further went on to verify and validate the data in Kaggle with the original source published by Zenodo, and although there are some limitations, it contains all critical information needed to find the solution to questions at hand. The usefulness of data decreases as time passes, so having been collected in 2016, the dataset is outdated which will have a major impact on any recommendation provided after this analysis.

# Data Cleaning Documentation

If you ask me, in my honest opinion, I think cleaning data is the most important part of data analysis because it helps you to achieve data integrity which is crucial to reliable data analytics results. Furthermore, clean data allows you to understand and analyze information, identify patterns, connect related information, and also draw useful conclusions.

## Process dirty data to clean data

Now let's first preview our data namely: daily activities, weight log information, hourly calories, and hourly steps.

```{r preview_df1, message=FALSE}
# Daily activities
kbl(head(activity)) %>% 
    kable_styling(bootstrap_options = "striped") %>%
    row_spec(0, background = "Aliceblue")

# Weight log
kbl(head(weight)) %>% 
    kable_styling(bootstrap_options = "striped") %>%
    row_spec(0, background = "Aliceblue")

# Hourly calories
kbl(head(calories)) %>% 
    kable_styling(bootstrap_options = "striped") %>%
    row_spec(0, background = "Aliceblue")

# Hourly steps
kbl(head(steps)) %>% 
    kable_styling(bootstrap_options = "striped") %>%
    row_spec(0, background = "Aliceblue")
```

The first thing that springs to mind when taking a peek at all of these data frames is the inconsistencies of the data format which include the data types and column names. For the daily activities (activity), we will rename the "<span style="font-weight: bold">ActivityDate</span>" column to "<span style="font-weight: bold">Date</span>" and convert its values to the <span style="background-color: #eee;  border-radius: 3px; font-family: courier, monospace; padding: 0 3px">DATE</span> format:

```{r activiy, message=FALSE}
activity <- activity %>% 
  rename(Date = ActivityDate) %>% 
  mutate(Date = as.Date(Date, format = "%m/%d/%Y"))
activity <- arrange(activity, Id, Date)
```

For the weight log info (weight), we will first split the <span style="background-color: #eee;  border-radius: 3px; font-family: courier, monospace; padding: 0 3px">DATETIME</span> format into separate columns and then name both columns, "<span style="font-weight: bold">Date</span>" and "<span style="font-weight: bold">Time</span>". Secondly, we will change the data type of "<span style="font-weight: bold">IsManualReport</span>" to the <span style="background-color: #eee;  border-radius: 3px; font-family: courier, monospace; padding: 0 3px">BOOLEAN</span> format then after we'll rearrange the data values to make sure that each ID returns its values in an orderly manner:

```{r weight, message=FALSE}
weight$Date = as.POSIXct(weight$Date, 
                         format = "%m/%d/%Y %I:%M:%S %p", 
                         tz = Sys.timezone())
weight <- add_column(weight, 
                     Time = format(weight$Date, format = "%H:%M:%S"), 
                     .after = "Date")
weight <- weight %>% mutate(Date = as.Date(Date, format = "%m/%d/%Y"))
weight <- weight %>% mutate(IsManualReport = as.logical(IsManualReport))
weight <- arrange(weight, Id, Date)
```

For both hourly calories (calories) and hourly steps (steps), we will basically do the same as above, split the <span style="background-color: #eee;  border-radius: 3px; font-family: courier, monospace; padding: 0 3px">DATETIME</span> format into separate columns and then name both columns, "<span style="font-weight: bold">Date</span>" and "<span style="font-weight: bold">Time</span>". Then after rearrange the data values to make sure each ID returns its values in an orderly manner for both data frames:

```{r calories_steps, message=FALSE}
# Hourly calories
calories$ActivityHour = as.POSIXct(calories$ActivityHour, 
                                   format = "%m/%d/%Y %I:%M:%S %p", 
                                   tz = Sys.timezone())
calories <- add_column(calories, 
                       Time = format(calories$ActivityHour, format = "%H:%M:%S"),
                       .after = "ActivityHour")
calories <- calories %>% 
  rename(Date = ActivityHour) %>% 
  mutate(Date = as.Date(Date, format = "%m/%d/%Y"))
calories <- arrange(calories, Id, Date, Time)


# Hourly steps
steps$ActivityHour = as.POSIXct(steps$ActivityHour,
                                format = "%m/%d/%Y %I:%M:%S %p",
                                tz = Sys.timezone())
steps <- add_column(steps, 
                    Time = format(steps$ActivityHour, format = "%H:%M:%S"), 
                    .after = "ActivityHour")
steps <- steps %>% 
  rename(Date = ActivityHour) %>% 
  mutate(Date = as.Date(Date, format = "%m/%d/%Y"))
steps <- arrange(steps, Id, Date, Time)
```

Now let's take another look at our data to preview the new changes:

```{r preview_df2, message=FALSE}
# Daily activities
kbl(head(activity)) %>% 
    kable_styling(bootstrap_options = "striped") %>%
    row_spec(0, background = "Aliceblue") %>%
    column_spec(2, extra_css = "white-space: nowrap")

# Weight log
kbl(head(weight)) %>% 
    kable_styling(bootstrap_options = "striped") %>%
    row_spec(0, background = "Aliceblue") %>%
    column_spec(2, extra_css = "white-space: nowrap")

# Hourly calories
kbl(head(calories)) %>% 
    kable_styling(bootstrap_options = "striped") %>%
    row_spec(0, background = "Aliceblue")

# Hourly steps
kbl(head(steps)) %>% 
    kable_styling(bootstrap_options = "striped") %>%
    row_spec(0, background = "Aliceblue")
```

## Export data frames to SQL

We will use SQL to further inspect and evaluate the data frames with the new changes intact. To do that we use the <span style="background-color: #eee;  border-radius: 3px; font-family: courier, monospace; padding: 0 3px">write.csv</span> function to export the data frames as <span style="background-color: #eee;  border-radius: 3px; font-family: courier, monospace; padding: 0 3px">.CSV</span> then import each of them in MySQL Workbench

```{r export_df}
write.csv(activity, "activity.csv", na = "")
write.csv(weight, "weight.csv", na = "")
write.csv(calories, "calories.csv", na = "")
write.csv(steps, "steps.csv", na = "")
```

By using the function above, it creates a new column when exporting the data frames which in this case, the new column is a unique identifier for each row since all data frames have composite primary keys (meaning 2 or more columns make up a unique record). Now let's take a peek at our data in SQL, we'll start with the daily activities (activity):

```{sql SQLtable_activity, eval=FALSE}
SELECT * FROM activity
LIMIT 100;
```
<span style="font-family: bahnschrift; font-size: 9pt; font-style: italic; font-weight: bold">PLEASE NOTE THERE ARE 1397 ROWS IN TOTAL BUT WE WILL ONLY DISPLAY THE FIRST 100 ROWS</span>

```{r echo=FALSE, warning=FALSE}
htmltools::includeHTML("/kaggle/input/embedded-files/activity_tableSQL.html")
```

<br>Let's check for duplicates, the following query returns all duplicate records in the activity table:

```{sql SQLcheck_duplicates, eval=FALSE}
SELECT Id, date FROM activity
GROUP BY Id, Date
HAVING COUNT(*) > 1
ORDER BY Id, Date;
```

```{r echo=FALSE, warning=FALSE}
htmltools::includeHTML("/kaggle/input/embedded-files/activity_duplicatesSQL.html")
```

<br>Now that we have seen the duplicates, let's remove them using the unique identifier which in this case is the new column "<span style="font-weight: bold">#</span>"

```{sql SQLdelete_duplicates, eval=FALSE}
DELETE tmp1 FROM activity AS tmp1
JOIN activity AS tmp2
WHERE tmp1.`#` < tmp2.`#`
AND tmp1.Id = tmp2.Id
AND tmp1.Date = tmp2.Date;
```

Next we check for unwanted data, this would be users with less than 10 total steps because the total estimated energy expenditure in calories doesn't correspond with the number of steps taken hence it's more likely that the data for these particular users is incorrect. Let's run the query:

```{sql SQLcheck_unwanted, eval=FALSE}
SELECT * FROM activity
WHERE TotalSteps < 10;
```

```{r echo=FALSE, warning=FALSE}
htmltools::includeHTML("/kaggle/input/embedded-files/activity_unwantedSQL.html")
```

<br>Now that we have seen the unwanted data, let's remove them using the following query:

```{sql SQLdelete_unwanted, eval=FALSE}
DELETE FROM activity
WHERE TotalSteps < 10;
```

A total number of 24 duplicates and 140 unwanted-data rows were removed from the activity table, now let's take one final look at our clean data:

```{sql SQLcleaned_activity, eval=FALSE}
SELECT * FROM activity 
LIMIT 100; 
```

<span style="font-family: bahnschrift; font-size: 9pt; font-style: italic; font-weight: bold">PLEASE NOTE THERE ARE NOW 1233 ROWS IN TOTAL BUT WE WILL ONLY DISPLAY THE FIRST 100 ROWS</span>
```{r echo=FALSE, warning=FALSE}
htmltools::includeHTML("/kaggle/input/embedded-files/activity_cleanedSQL.html")
```

<br>Upon further investigation, by running the same query on the rest of the data frames, I found that there are no duplicates and no unwanted data from the three remaining tables (weight, calories and steps). The query for these three tables include an extra column which is "<span style="font-weight: bold">Time</span>" because it is part of the primary key so basically, the "<span style="font-weight: bold">Id</span>", "<span style="font-weight: bold">Date</span>" and "<span style="font-weight: bold">Time</span>" columns were included in the <span style="background-color: #eee;  border-radius: 3px; font-family: courier, monospace; padding: 0 3px">SELECT</span> and <span style="background-color: #eee;  border-radius: 3px; font-family: courier, monospace; padding: 0 3px">GROUP BY</span> sections when checking for duplicates.

Now that we've checked for duplicates and unwanted data, it's time we import our data frames back in RStudio. In this case, we will only import the activity table since it's the only one that we made changes to:

```{r import_activity}
activity <- read.csv("/kaggle/input/embedded-files/activity_SQL.csv")
```

# Data anlysis aggregation

Fun Fact - Did you know walking is an effective way to help improve overall health? A two-mile walk (which converts to 3.22 km) is a common, low-impact exercise that enhances the cardiovascular health, boost energy levels and does not exert strain on joints susceptible to injury with higher-impact workouts, this is according to the article written by [<span style="font-style: italic">Ana Cutura</span>](https://bellabeat.com/fitness-exercise/two-mile-walk-calorie-burn/).

So the next step in our analysis given that our data is now cleaned and in a right format, we can proceed to aggregating the data by identifying trends, make comparisons, and gain insights that wouldn't be possible if each of the data elements were analyzed on its own. The first business task provided by Sršen was to understand the trends in smart device usage, now to do that, we must first look at the summary statistics of each data frame.

## Summary statistics

For activity, let's extract a summary from "<span style="font-weight: bold">TotalDistance</span>", "<span style="font-weight: bold">VeryActiveDistance</span>", "<span style="font-weight: bold">ModeratetlyActiveDistance</span>", "<span style="font-weight: bold">LightActiveDistance</span>" and "<span style="font-weight: bold">SedentaryMinutes</span>" columns:

```{r summary_act}
activity %>% 
  select(TotalDistance, VeryActiveDistance, ModeratelyActiveDistance, 
         LightActiveDistance, SedentaryMinutes) %>% 
  summary()
```

Based on the above results, on average, participants cover 5.89 km (3.66 miles) with 958.1 minutes (or 16 hours) sedentary time each day. It is said walking burns about 100 calories per mile, so using this accessible form of exercise when sedentary will be effective. I mention walking because the majority of participants are lightly active and walking requires no special equipment.

For weight, let's extract a summary from "<span style="font-weight: bold">WeightKg</span>", "<span style="font-weight: bold">WeightPounds</span>" and "<span style="font-weight: bold">BMI</span>" columns:

```{r summary_wgt}
weight %>% select(WeightKg, WeightPounds, BMI) %>% summary()
```

For calories, let's extract a summary from the "<span style="font-weight: bold">Calories</span>" column:

```{r summary_cal}
calories %>% select(Calories) %>% summary()
```

For steps, let's extract a summary from the "<span style="font-weight: bold">StepTotal</span>" column:

```{r summary_stp}
steps %>% select(StepTotal) %>% summary()
```

The number of steps for a two-mile walk may vary, but it's commonly between 2 000 to 2 500 steps per mile. Based on the above results, participants on average, walk 302.9 steps per hour which results to 7 272 steps per day. In other words on average, participants cover over 3 miles a day and some of these steps were recorded during exercises hence the participants burn on average, 95.85 calories per hour (or 2 304 calories per day).

With only 13 participants from the weight dataset, there are no definitive conclusions and recommendations that can be done. However, based on this recorded data we can assume that most of the participants involved in this survey were overweight hence having BMI of 25.59 kg/m<span style="font-size: 8pt;">^2^</span> on the third quadrant, which is slightly higher than the average BMI that is 25.37 kg/m<span style="font-size: 8pt;">^2^</span>. This is according to CDC's [<span style="font-style: italic">Adult BMI Categories</span>](https://www.cdc.gov/bmi/adult-calculator/bmi-categories.html)

## Visualization

Right about now, you're probably asking yourself, "why should people care about data visualization?" The answer is simple, the audience won't always have the ability to interpret or understand the complex information that we relay as analysts hence using visualization will inform them in a way that is meaningful, engaging, and easy to understand. Part of why data visualization is so effective is because people's eyes are drawn to colors, shapes, and patterns, which makes those visual elements perfect for telling a story that goes beyond just the numbers.

For visualizing our data, I will use another tool in our data analytics arsenal and that is Tableau. Before we get into that though, we need to export our data again but this time we will only export the daily activity data frame using <span style="background-color: #eee;  border-radius: 3px; font-family: courier, monospace; padding: 0 3px">write_csv</span> function since it is the only one that we made changes to.

```{r export_activity}
write.csv(activity, "activity.csv", na = "")
```

Tableau is a business intelligence and analytics platform that helps people to see, understand, and make decisions with data. Visualizations in Tableau are automatically interactive and also dynamic meaning they change over time which can be useful to the audience (in this case, you're my audience). The interactive nature of these graphics means you have some control over what you see, in other words, you can adjust the measures and dimensions in the viz by filtering, customizing information, or highlighting a data point.

Now the first data viz we going to take a look at is how active users are per week:

<div class='tableauPlaceholder' id='viz1723291662209' style='position: relative'>

<noscript>
  <a href='#'>
  <img alt='Dashboard 1 ' src='https:&#47;&#47;public.tableau.com&#47;static&#47;images&#47;Be&#47;BellabeatCaseStudy-ActivenessPerWeek&#47;Dashboard1&#47;1_rss.png' style='border: none' />
  </a>
</noscript>

<object class='tableauViz'  style='display:none;'>
<param name='host_url' value='https%3A%2F%2Fpublic.tableau.com%2F' />
<param name='embed_code_version' value='3' />
<param name='site_root' value='' />
<param name='name' value='BellabeatCaseStudy-ActivenessPerWeek&#47;Dashboard1' />
<param name='tabs' value='no' />
<param name='toolbar' value='yes' />
<param name='static_image' value='https:&#47;&#47;public.tableau.com&#47;static&#47;images&#47;Be&#47;BellabeatCaseStudy-ActivenessPerWeek&#47;Dashboard1&#47;1.png' />
<param name='animate_transition' value='yes' />
<param name='display_static_image' value='yes' />
<param name='display_spinner' value='yes' />
<param name='display_overlay' value='yes' />
<param name='display_count' value='yes' />
<param name='language' value='en-US' />
<param name='filter' value='publish=yes' />
</object>
</div>

```{js embedcode_viz1, echo=FALSE}
var divElement = document.getElementById('viz1723291662209');
var vizElement = divElement.getElementsByTagName('object')[0];
vizElement.style.width='100%';vizElement.style.height=(divElement.offsetWidth*0.75)+'px';
var scriptElement = document.createElement('script');
scriptElement.src = 'https://public.tableau.com/javascripts/api/viz_v1.js';
vizElement.parentNode.insertBefore(scriptElement, vizElement);
```

<span style="font-weight: bold">Observations:</span>

<ul style="list-style-type: square; margin: 15px">
<li style="padding-left: 0px">As expected, the majority of users spent most of their time in sedentary throughout the week for the entire period of 2 months</li>
<li style="padding-left: 0px">For each category, there's a weak positive correlation</li>
<li style="padding-left: 0px">By filtering the date to show month-to-month (that is, 12<span style="font-size: 8pt;">^th^</span> March - 12<span style="font-size: 8pt;">^th^</span> April and 12<span style="font-size: 8pt;">^th^</span> April - 12<span style="font-size: 8pt;">^th^</span> May), we can see Tuesday is the day where users were most active</li>
</ul>

For the next data viz, we are going to take a look at the weight progress for users:

<div class='tableauPlaceholder' id='viz1723465031425' style='position: relative'>

<noscript>
  <a href='#'>
  <img alt='Dashboard 2 ' src='https:&#47;&#47;public.tableau.com&#47;static&#47;images&#47;Be&#47;BellabeatCaseStudy-MonthlyWeightRegulation&#47;Dashboard2&#47;1_rss.png' style='border: none' />
  </a>
</noscript>

<object class='tableauViz'  style='display:none;'>
<param name='host_url' value='https%3A%2F%2Fpublic.tableau.com%2F' />
<param name='embed_code_version' value='3' />
<param name='site_root' value='' />
<param name='name' value='BellabeatCaseStudy-MonthlyWeightRegulation&#47;Dashboard2' />
<param name='tabs' value='no' />
<param name='toolbar' value='yes' />
<param name='static_image' value='https:&#47;&#47;public.tableau.com&#47;static&#47;images&#47;Be&#47;BellabeatCaseStudy-MonthlyWeightRegulation&#47;Dashboard2&#47;1.png' />
<param name='animate_transition' value='yes' />
<param name='display_static_image' value='yes' />
<param name='display_spinner' value='yes' />
<param name='display_overlay' value='yes' />
<param name='display_count' value='yes' />
<param name='language' value='en-US' />
</object>
</div>

```{js embedcode_viz2, echo=FALSE}
var divElement = document.getElementById('viz1723465031425');
var vizElement = divElement.getElementsByTagName('object')[0];
vizElement.style.width='100%';
vizElement.style.height=(divElement.offsetWidth*0.75)+'px';
var scriptElement = document.createElement('script');
scriptElement.src = 'https://public.tableau.com/javascripts/api/viz_v1.js';
vizElement.parentNode.insertBefore(scriptElement, vizElement);
```

<span style="font-weight: bold">Observations:</span>

There are only 7 out of 13 user id's displayed in this viz, reason being these are the only records that have more that one data point. We can see the day-to-day progress of each individual whether they are gaining weight or losing it

Lastly, we are going to take a look at the relationship between the amount of steps taken and amount of calories burned by users hourly:

<div class='tableauPlaceholder' id='viz1723494686281' style='position: relative'>

<noscript>
  <a href='#'>
  <img alt='Dashboard 3 ' src='https:&#47;&#47;public.tableau.com&#47;static&#47;images&#47;Be&#47;BellabeatCaseStudy-Stepsvs_Calories&#47;Dashboard3&#47;1_rss.png' style='border: none' />
  </a>
</noscript>

<object class='tableauViz'  style='display:none;'><param name='host_url' value='https%3A%2F%2Fpublic.tableau.com%2F' />
<param name='embed_code_version' value='3' />
<param name='site_root' value='' />
<param name='name' value='BellabeatCaseStudy-Stepsvs_Calories&#47;Dashboard3' />
<param name='tabs' value='no' />
<param name='toolbar' value='yes' />
<param name='static_image' value='https:&#47;&#47;public.tableau.com&#47;static&#47;images&#47;Be&#47;BellabeatCaseStudy-Stepsvs_Calories&#47;Dashboard3&#47;1.png' />
<param name='animate_transition' value='yes' />
<param name='display_static_image' value='yes' />
<param name='display_spinner' value='yes' />
<param name='display_overlay' value='yes' />
<param name='display_count' value='yes' />
<param name='language' value='en-US' />
</object>
</div>

```{js embedcode_viz3, echo=FALSE}
var divElement = document.getElementById('viz1723494686281');
var vizElement = divElement.getElementsByTagName('object')[0];
vizElement.style.width='100%';vizElement.style.height=(divElement.offsetWidth*0.75)+'px';
var scriptElement = document.createElement('script');
scriptElement.src = 'https://public.tableau.com/javascripts/api/viz_v1.js';
vizElement.parentNode.insertBefore(scriptElement, vizElement);
```

<span style="font-weight: bold">Observations:</span>

<ul style="list-style-type: square; margin: 15px">
<li style="padding-left: 0px">There's a clear strong positive correlation between the two variables, the amount of steps taken and the amount of calories burned</li>
<li style="padding-left: 0px">Which is obvious, the more steps taken every hour, the more are the calories burned</li>
<li style="padding-left: 0px">We can see an uptrend for each month denoted by the 2<span style="font-size: 8pt;">^nd^</span> Degree Polynomial trend lines but instead of progression, there's regression in the amount of calories burned from March to May</li>
</ul>

# Conclusion

In the introduction, the primary goal of this analysis was to understand the trends in smart device usage, understand the value these trends have towards customers and predict how they can help influence the company's marketing strategy. Based on this analysis, it is plausible that even though users did not utilize every product that Bellabeat offered, the ones they consistently used produced optimal results.

![](https://www.womensrunning.co.uk/wp-content/uploads/2015/11/iStock-524429813.jpg)

## Recommendations to implement

<ul style="list-style-type: square; margin: 15px">
<li style="padding-left: 0px">Give users the option to sign up for a one-time, 30-day free trial subscription that will grant them access to 24/7 fully individualized advice on goals and lifestyle-based nutrition, exercise, sleep, health and beauty. It should also be the case that users who recommend friends would get a discounted subscription charge.</li>
<br>
<li style="padding-left: 0px">Give additional perks to users with memberships such as discounts on Bellabeat products and associated health & fitness companies, provide daily feedback on user's progress and body regulation, and establish a rewards program so users can earn redeemable vouchers every week by accomplishing challenges.</li>
 <br>
<li style="padding-left: 0px">As we've seen from our analysis, users spend most of their time in sedentary (meaning rest or period of inactive) and they are inconsistent at logging in their data (According to weight log info data). Ultimately after trying out a membership in its entirety, users will most likely sign up to become members, which will encourage them to become more active and also inspire the utilization of all products offered by the company.</li>
<br>
<li style="padding-left: 0px">Incorporate walking as a milestone in the weekly challenges because it can contribute significantly to calorie burn and overall health, making it an excellent daily habit for maintaining fitness and managing weight. To obtain the maximum benefit from calorie burn and overall energy expenditure, enable an alert notification that encourages users to walk consistently.</li>
<br>
<li style="padding-left: 0px">Our analysis shows the average total steps per day are 7 272 which is slightly less than the recommended daily steps by the CDC. Therefore send a daily notification that recommends a minimum number of steps per day and the minimum pace for each individual according to their weight class. The reason for this is that a user's weight and pace are the two main aspects that affect how many calories they burn; in other words, the more a user weighs, the more energy or calories they'll expend on their walk.</li>
</ul>

This brings us to the end of my data analytics case study, as mentioned before, any comments or recommendations will be much appreciated plus your feedback will be a confidence booster to my analytics skills, and don't forget to do the most important thing - <span style="font-weight: bold">UPVOTE</span>. Rather than closing this conclusion with a time-related joke, allow me to share a quote from the greatest man that ever walked this earth. Unlike the intro, perhaps you'll like this one: <span style="font-style: italic">"Do not be anxious about tomorrow, for tomorrow will be anxious for itself. Each day has enough trouble of its own." (Jesus Christ)</span>

<span style="font-family: bahnschrift; font-size:16pt"><center>--- THE END [&deg;.&deg;] ---</center></span>